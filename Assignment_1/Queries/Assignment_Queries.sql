--Step 2
-- RUN Generated_Script_From_Step1.sql File

--Step 3
-- RUN CST2355_A1_Insert1.sql File

--Step 4
UPDATE FEE f
SET f.FeeDescription = (
    SELECT g.FirstName || ' paid ' || ft.FeeTypeName || ' Fee'
    FROM GUEST g
    JOIN FEE_TYPE ft ON ft.FeeTypeID = f.FeeTypeID
    WHERE g.GuestID = f.GuestID
)
WHERE EXISTS (
    SELECT 1 
    FROM GUEST g 
    WHERE g.GuestID = f.GuestID
)
AND EXISTS (
    SELECT 1
    FROM FEE_TYPE ft 
    WHERE ft.FeeTypeID = f.FeeTypeID
);
commit;

--Step 5
-- EXPORT INSERT Statements from SQL developer and save it

--Step 6
-- Update Diagram in Data Modeller

--Step 7A
DROP TABLE GUEST CASCADE CONSTRAINTS;
DROP TABLE FEE_TYPE CASCADE CONSTRAINTS;
DROP TABLE EMPLOYEE CASCADE CONSTRAINTS;
DROP TABLE FEE CASCADE CONSTRAINTS;

CREATE TABLE employee (
    employeeid NUMBER(10) GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL,
    firstname  VARCHAR2(30),
    lastname   VARCHAR2(30),
    title      VARCHAR2(30),
    city       VARCHAR2(40),
    province   CHAR(2),
    wage       NUMBER(8, 2),
    wagetype   VARCHAR2(10),
    managerid  NUMBER(10)
);

ALTER TABLE employee ADD CONSTRAINT employeepk PRIMARY KEY ( employeeid );

CREATE TABLE fee (
    feeid               NUMBER(10) GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1)
        CONSTRAINT nnc_fee_feeid NOT NULL,
    feename             VARCHAR2(30)
        CONSTRAINT nnc_fee_feename NOT NULL,
    feedescription      VARCHAR2(300),
    datecharged         DATE
        CONSTRAINT nnc_fee_datecharged NOT NULL,
    feecharged          NUMBER(10)
        CONSTRAINT nnc_fee_feecharged NOT NULL,
    guestid       NUMBER,
    feetypeid  NUMBER(10),
    employeeid NUMBER(10)
);

ALTER TABLE fee ADD CONSTRAINT feepk PRIMARY KEY ( feeid );

CREATE TABLE fee_type (
    feetypeid     NUMBER(10) GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL,
    feetypename   VARCHAR2(30),
    defaultamount NUMBER(6, 2)
);

ALTER TABLE fee_type ADD CONSTRAINT feetypepk PRIMARY KEY ( feetypeid );

CREATE TABLE guest (
    guestid   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1 INCREMENT BY 1) NOT NULL,
    firstname VARCHAR2(30) NOT NULL,
    lastname  VARCHAR2(30),
    city      VARCHAR2(40),
    province  CHAR(2)
);

ALTER TABLE guest ADD CONSTRAINT guestpk PRIMARY KEY ( guestid );

ALTER TABLE fee
    ADD CONSTRAINT fee_feetypefk FOREIGN KEY ( feetypeid )
        REFERENCES fee_type ( feetypeid );

ALTER TABLE fee
    ADD CONSTRAINT feeemployefk FOREIGN KEY ( employeeid )
        REFERENCES employee ( employeeid );

ALTER TABLE fee
    ADD CONSTRAINT feeguesttfk FOREIGN KEY ( guestid )
        REFERENCES guest ( guestid );

ALTER TABLE employee
    ADD CONSTRAINT managerfk FOREIGN KEY ( managerid )
        REFERENCES employee ( employeeid );
        

--Step 7B
-- RUN Export_InsertScript_Step5.sql File


--Step 8
-- RUN CST2355_A1_Insert2.sql File


--Queries
--Step 9
-- Set SQL*Plus environment settings for better display
SET LINESIZE 200
SET PAGESIZE 100
SET COLSEP ' | '

-- Format individual columns
COLUMN "SUBORDINATE FIRSTNAME" FORMAT A22
COLUMN "SUBORDINATE LASTNAME" FORMAT A20
COLUMN "SUBORDINATE TITLE" FORMAT A20
COLUMN "MANAGER FIRSTNAME" FORMAT A20
COLUMN "MANAGER LASTNAME" FORMAT A20
COLUMN "MANAGER TITLE" FORMAT A17

-- SQL Query
SELECT 
    E2.FirstName AS "SUBORDINATE FIRSTNAME", 
    E2.LastName AS "SUBORDINATE LASTNAME", 
    E2.Title AS "SUBORDINATE TITLE",
    E1.FirstName AS "MANAGER FIRSTNAME", 
    E1.LastName AS "MANAGER LASTNAME", 
    E1.Title AS "MANAGER TITLE"
FROM 
    Employee E2
LEFT JOIN 
    Employee E1 ON E2.ManagerID = E1.EmployeeID;

-- Reset environment settings after execution (optional)
SET LINESIZE 80
SET PAGESIZE 14
SET COLSEP ' '


--Step 10
select * from Guest;
select guestid, SUM(feecharged) as TOTALFEE from Fee group by guestid order by TOTALFEE desc;

-- Step 11
SELECT GUESTID, 
       TOTALFEE AS TOTALFEE
FROM 
    (
        SELECT guestid, 
               SUM(feecharged) AS TOTALFEE
        FROM Fee
        GROUP BY guestid
        ORDER BY TOTALFEE DESC
    );
    
--Step 12
SELECT GUESTID, 
       TOTALFEE AS TOTALFEE,
       CASE
            WHEN ROWNUM = 1 THEN 'A'
            WHEN ROWNUM = 2 THEN 'B'
            WHEN ROWNUM = 3 THEN 'C'
        END AS RANKLETTER
FROM 
    (
        SELECT guestid, 
               SUM(feecharged) AS TOTALFEE
        FROM Fee
        GROUP BY guestid
        ORDER BY TOTALFEE DESC
    )
WHERE ROWNUM <= 3
ORDER BY TOTALFEE DESC;

--Step 13
SELECT 
    GUEST.FirstName, 
    GUEST.LastName, 
    TOTAL_FEE.TOTALFEE, 
    CASE 
        WHEN TOTAL_FEE.ROWNUM_VAL = 1 THEN 'A'
        WHEN TOTAL_FEE.ROWNUM_VAL = 2 THEN 'B'
        WHEN TOTAL_FEE.ROWNUM_VAL = 3 THEN 'C'
    END AS RANKLETTER
FROM 
    GUEST
INNER JOIN 
    (
        SELECT guestid, TOTALFEE, ROWNUM AS ROWNUM_VAL
        FROM (
            SELECT guestid, SUM(feecharged) AS TOTALFEE
            FROM Fee
            GROUP BY guestid
            ORDER BY TOTALFEE DESC
        )
        WHERE ROWNUM <= 3
    ) TOTAL_FEE ON GUEST.guestid = TOTAL_FEE.guestid
ORDER BY GUEST.LastName;

--Step 14
SELECT 
    GUEST.FirstName, 
    GUEST.LastName, 
    TOTAL_FEE.TOTALFEE, 
    CASE 
        WHEN TOTAL_FEE.ROWNUM_VAL = 1 THEN 'A'
        WHEN TOTAL_FEE.ROWNUM_VAL = 2 THEN 'B'
        WHEN TOTAL_FEE.ROWNUM_VAL = 3 THEN 'C'
    END AS RANKLETTER
FROM 
    GUEST
INNER JOIN 
    (
        SELECT guestid, TOTALFEE, ROWNUM AS ROWNUM_VAL
        FROM (
            SELECT guestid, SUM(feecharged) AS TOTALFEE
            FROM Fee
            WHERE fee.feetypeid IN (
                SELECT FeetypeID
                FROM FEE_TYPE
                WHERE FeeTypeName IN ('Rate', 'SmokeDamage')
            )
            GROUP BY guestid
            ORDER BY TOTALFEE DESC
        )
        WHERE ROWNUM <= 3
    ) TOTAL_FEE ON GUEST.guestid = TOTAL_FEE.guestid
ORDER BY GUEST.LastName;


--Step 15
SET LINESIZE 200
SET PAGESIZE 100
SET COLSEP ' | '
-- Format individual columns (optional, for better alignment)
COLUMN firstname FORMAT A20
COLUMN lastname FORMAT A20
COLUMN feetypename FORMAT A20
COLUMN datecharged FORMAT A20
COLUMN feecharged FORMAT 999999
COLUMN TotalFeeCharged FORMAT 99999999
SELECT 
    G.firstname, 
    G.lastname, 
    Ft.feetypename, 
    F.datecharged, 
    F.feecharged,
    (SELECT SUM(feecharged) 
     FROM Fee 
     WHERE guestid = F.guestid) AS TotalFeeCharged
FROM 
    Fee F 
JOIN 
    Guest G ON F.guestid = G.guestid 
JOIN 
    Fee_type Ft ON F.feetypeid = Ft.feetypeid;
-- Reset environment settings after execution (optional)
SET LINESIZE 80
SET PAGESIZE 14
SET COLSEP ' '









